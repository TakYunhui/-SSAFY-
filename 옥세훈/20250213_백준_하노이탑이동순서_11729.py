N = int(input())


def recur(a, b, n):
    # 링이 하나 일때 a -> b로 옮기는 건 당연해 (a = 1번 판, b = 3번 판)
    if n == 1:
        print(a, b)
        return

    # n의 링이 3번으로 가기 위해선 n-1까지의 원판이 6-a-b 판에 위치해야함. 
    recur(a, 6-a-b, n-1)
    # 위 과정을 실행했다면, n의 원판을 3번에 옮길 수 있음
    print(a, b)
    # 마지막으로, n-1개의 원판을 3번으로 옮겨주면 완성임
    recur(6-a-b, b, n-1)

    # 이 단순한 코드가 나올 수 있는 것은, 귀납법의 특성을 이용했기 때문이다.
    # n개의 판을 옮길 수 있다면, n+1개의 판도 옮길 수 있는 것이다.

# 하노이탑 공식
print(2**N-1)
recur(1, 3, N)